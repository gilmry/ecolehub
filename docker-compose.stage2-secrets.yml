# EcoleHub Stage 2 avec Docker Secrets
# Messagerie + Événements avec gestion sécurisée des secrets

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ecolehub
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: ecolehub
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_stage2.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    secrets:
      - db_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecolehub"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecolehub

  redis:
    image: redis:7-alpine
    command: sh -c 'redis-server --appendonly yes --requirepass $$(cat /run/secrets/redis_password)'
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    secrets:
      - redis_password
    healthcheck:
      test: ["CMD", "sh", "-c", "redis-cli -a $$(cat /run/secrets/redis_password) ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecolehub

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        STAGE: "2"
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://ecolehub@postgres:5432/ecolehub
      - REDIS_URL=redis://redis:6379/0
      - STAGE=2
    secrets:
      - secret_key
      - db_password
      - redis_password
    volumes:
      - ./backend/app:/app/app
    depends_on:
      - postgres
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ecolehub

  frontend:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - ecolehub

# Configuration des secrets Docker
secrets:
  secret_key:
    file: ./secrets/secret_key.txt
  db_password:
    file: ./secrets/db_password.txt
  redis_password:
    file: ./secrets/redis_password.txt

volumes:
  postgres_data:
  redis_data:

networks:
  ecolehub:
    driver: bridge