# EcoleHub Stage 4 avec Docker Secrets
# Version sécurisée utilisant Docker Swarm secrets

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ecolehub
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
      POSTGRES_DB: ecolehub
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_stage4.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    secrets:
      - db_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecolehub"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecolehub

  redis:
    image: redis:7-alpine
    command: sh -c 'redis-server --appendonly yes --requirepass $$(cat /run/secrets/redis_password)'
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    secrets:
      - redis_password
    healthcheck:
      test: ["CMD", "sh", "-c", "redis-cli -a $$(cat /run/secrets/redis_password) ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecolehub

  minio:
    image: minio/minio:latest
    command: sh -c 'export MINIO_ROOT_USER=$$(cat /run/secrets/minio_access_key) && export MINIO_ROOT_PASSWORD=$$(cat /run/secrets/minio_secret_key) && minio server /data --console-address ":9001"'
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    secrets:
      - minio_access_key
      - minio_secret_key
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - ecolehub

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        STAGE: "4"
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://ecolehub@postgres:5432/ecolehub
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - STAGE=4
    secrets:
      - secret_key
      - db_password
      - redis_password
      - minio_access_key
      - minio_secret_key
      - mollie_api_key
      - printful_api_key
    volumes:
      - ./backend/app:/app/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
      - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ecolehub

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        STAGE: "4"
    command: celery -A app.workers.celery_app worker -l info
    environment:
      - DATABASE_URL=postgresql://ecolehub@postgres:5432/ecolehub  
      - REDIS_URL=redis://redis:6379/0
      - STAGE=4
    secrets:
      - secret_key
      - db_password
      - redis_password
      - mollie_api_key
      - printful_api_key
    volumes:
      - ./backend/app:/app/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
      - backend
    networks:
      - ecolehub

  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ecolehub

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana_password
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DEFAULT_TIMEZONE=Europe/Brussels
    secrets:
      - grafana_password
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ecolehub

  traefik:
    image: traefik:v3.0
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=INFO"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - ecolehub

  frontend:
    image: nginx:alpine
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./traefik/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - ecolehub
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

# Configuration des secrets Docker
secrets:
  secret_key:
    file: ./secrets/secret_key.txt
  db_password:
    file: ./secrets/db_password.txt
  redis_password:
    file: ./secrets/redis_password.txt
  minio_access_key:
    file: ./secrets/minio_access_key.txt
  minio_secret_key:
    file: ./secrets/minio_secret_key.txt
  mollie_api_key:
    file: ./secrets/mollie_api_key.txt
  printful_api_key:
    file: ./secrets/printful_api_key.txt
  grafana_password:
    file: ./secrets/grafana_password.txt

volumes:
  postgres_data:
  redis_data:
  minio_data:
  prometheus_data:
  grafana_data:

networks:
  ecolehub:
    driver: bridge