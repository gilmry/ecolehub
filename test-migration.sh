#!/bin/bash
# Test complet de migration Stage 0 ‚Üí Stage 1

echo "üß™ Test Migration EcoleHub Stage 0 ‚Üí Stage 1"
echo "============================================="

# 1. Test Stage 0 
echo "1Ô∏è‚É£ Test Stage 0..."
cp .env.example .env
docker-compose up -d --build > /dev/null 2>&1

sleep 10

# Cr√©er utilisateur test
echo "   ‚Ä¢ Cr√©ation utilisateur test..."
curl -s -X POST http://localhost:8000/register \
  -H "Content-Type: application/json" \
  -d '{"email":"test@ndi.be","password":"test123","first_name":"Test","last_name":"User"}' > /dev/null

# V√©rifier SQLite cr√©√©
if [ -f "db/ecolehub.db" ]; then
    USERS_COUNT=$(sqlite3 db/ecolehub.db "SELECT COUNT(*) FROM users;")
    echo "   ‚Ä¢ ‚úÖ SQLite cr√©√© avec $USERS_COUNT utilisateur(s)"
else
    echo "   ‚Ä¢ ‚ùå SQLite non cr√©√©"
    exit 1
fi

# 2. Test Migration
echo ""
echo "2Ô∏è‚É£ Test Migration vers Stage 1..."
./migrate.sh

# 3. Test Stage 1
echo ""
echo "3Ô∏è‚É£ Validation Stage 1..."

sleep 5

HEALTH=$(curl -s http://localhost:8000/health 2>/dev/null)
if echo "$HEALTH" | grep -q '"stage":1'; then
    echo "   ‚Ä¢ ‚úÖ Stage 1 op√©rationnel"
    echo "   ‚Ä¢ ‚úÖ PostgreSQL connect√©"
    
    # Test SEL endpoints
    CATEGORIES=$(curl -s http://localhost:8000/sel/categories 2>/dev/null)
    if echo "$CATEGORIES" | grep -q "garde"; then
        echo "   ‚Ä¢ ‚úÖ Syst√®me SEL actif (9 cat√©gories)"
    else
        echo "   ‚Ä¢ ‚ùå Syst√®me SEL probl√®me"
    fi
    
    echo ""
    echo "üéâ Migration Stage 0 ‚Üí Stage 1 valid√©e !"
    echo ""
    echo "üìã Fonctionnalit√©s disponibles:"
    echo "‚Ä¢ Authentification (conserv√©e)"
    echo "‚Ä¢ Gestion enfants (conserv√©e)"  
    echo "‚Ä¢ Syst√®me SEL (nouveau)"
    echo "‚Ä¢ PostgreSQL (nouveau)"
    
else
    echo "   ‚Ä¢ ‚ùå Stage 1 ne d√©marre pas"
    echo "Logs:"
    docker-compose -f docker-compose.stage1.yml logs backend --tail=5
    exit 1
fi