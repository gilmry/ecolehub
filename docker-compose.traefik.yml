version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    command:
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.api.address=:8080"
      - "--log.level=INFO"
      - "--accesslog=true"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entryPoint=metrics"
      - "--entrypoints.metrics.address=:8082"
    ports:
      - "80:80"      # HTTP
      - "443:443"    # HTTPS  
      - "8080:8080"  # Traefik Dashboard
      - "8082:8082"  # Metrics
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik
    networks:
      - ecolehub
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ecolehub
      POSTGRES_PASSWORD: ${DB_PASSWORD:-ecolehub_secure_password}
      POSTGRES_DB: ecolehub
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_stage4.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ecolehub
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecolehub"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secure_password}
    volumes:
      - redis_data:/data
    networks:
      - ecolehub
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis_secure_password}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-ecolehub_minio}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minio_secure_password}
    volumes:
      - minio_data:/data
    networks:
      - ecolehub
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.minio-api.rule=Host(`minio.localhost`)"
      - "traefik.http.routers.minio-api.entrypoints=web"
      - "traefik.http.routers.minio-api.service=minio-api"
      - "traefik.http.services.minio-api.loadbalancer.server.port=9000"
      - "traefik.http.routers.minio-console.rule=Host(`minio-console.localhost`)"
      - "traefik.http.routers.minio-console.entrypoints=web"
      - "traefik.http.routers.minio-console.service=minio-console"
      - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  backend:
    build:
      context: ./backend
      args:
        STAGE: 4
    environment:
      - DATABASE_URL=postgresql://ecolehub:${DB_PASSWORD:-ecolehub_secure_password}@postgres:5432/ecolehub
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secure_password}@redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-ecolehub_minio}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minio_secure_password}
      - SECRET_KEY=${SECRET_KEY:-change-this-in-production-very-important}
      - MOLLIE_API_KEY=${MOLLIE_API_KEY:-test_mollie_key}
      - PRINTFUL_API_KEY=${PRINTFUL_API_KEY:-test_printful_key}
      - PROMETHEUS_ENABLED=true
      - STAGE=4
    volumes:
      - ./backend/app:/app/app
      - ./data:/app/data
      - ./db:/app/db
      - ./scripts:/app/scripts
      - ./uploads:/app/uploads
      - ./frontend/locales:/app/frontend/locales:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - ecolehub
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ecolehub-api.rule=Host(`api.localhost`) || PathPrefix(`/api`)"
      - "traefik.http.routers.ecolehub-api.entrypoints=web"
      - "traefik.http.routers.ecolehub-api.service=ecolehub-api"
      - "traefik.http.services.ecolehub-api.loadbalancer.server.port=8000"
      # WebSocket support
      - "traefik.http.routers.ecolehub-ws.rule=Host(`localhost`) && PathPrefix(`/ws`)"
      - "traefik.http.routers.ecolehub-ws.entrypoints=web"
      - "traefik.http.routers.ecolehub-ws.service=ecolehub-api"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery:
    build:
      context: ./backend
      args:
        STAGE: 4
    command: celery -A app.workers.celery_app worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://ecolehub:${DB_PASSWORD:-ecolehub_secure_password}@postgres:5432/ecolehub
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secure_password}@redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-ecolehub_minio}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minio_secure_password}
      - MOLLIE_API_KEY=${MOLLIE_API_KEY:-test_mollie_key}
      - PRINTFUL_API_KEY=${PRINTFUL_API_KEY:-test_printful_key}
      - STAGE=4
    volumes:
      - ./backend/app:/app/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
      - minio
    networks:
      - ecolehub

  frontend:
    image: nginx:alpine
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./traefik/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - ecolehub
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ecolehub-frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.ecolehub-frontend.entrypoints=web"
      - "traefik.http.routers.ecolehub-frontend.service=ecolehub-frontend"
      - "traefik.http.services.ecolehub-frontend.loadbalancer.server.port=80"
      # Middleware for backend API routing
      - "traefik.http.middlewares.api-strip.stripPrefix.prefixes=/api"
      - "traefik.http.routers.ecolehub-api-routes.rule=Host(`localhost`) && PathPrefix(`/api`) || PathPrefix(`/sel`) || PathPrefix(`/shop`) || PathPrefix(`/education`) || PathPrefix(`/conversations`) || PathPrefix(`/events`) || PathPrefix(`/users`) || PathPrefix(`/children`) || PathPrefix(`/register`) || PathPrefix(`/login`) || PathPrefix(`/me`) || PathPrefix(`/health`) || PathPrefix(`/metrics`) || PathPrefix(`/analytics`) || PathPrefix(`/i18n`) || PathPrefix(`/payments`)"
      - "traefik.http.routers.ecolehub-api-routes.entrypoints=web"
      - "traefik.http.routers.ecolehub-api-routes.service=ecolehub-api"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/ecolehub_rules.yml:/etc/prometheus/ecolehub_rules.yml:ro
      - prometheus_data:/prometheus
    networks:
      - ecolehub
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)"
      - "traefik.http.routers.prometheus.entrypoints=web"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin_ecolehub}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DEFAULT_TIMEZONE=Europe/Brussels
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - ecolehub
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  ecolehub:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  minio_data:
  prometheus_data:
  grafana_data: